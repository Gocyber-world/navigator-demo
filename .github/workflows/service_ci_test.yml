name: Service CI Test
on:
  pull_request:
    paths:
      - 'service/**'
      - '.github/workflows/service_**'

permissions:
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  # pull-requests: read
jobs:
  apitest:
    name: API Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: ./service
    steps:
      - uses: actions/checkout@v3
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      - uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3307 # Optional, default value is 3306. The port of host
          # container port: 3307 # Optional, default value is 3306. The port of container
          character set server: "utf8mb4" # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
          collation server: "utf8mb4_general_ci" # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
          mysql version: "5.7" # Optional, default value is "latest". The version of the MySQL
          mysql database: "navigator_ci" # Optional, default value is "test". The specified database which will be create
          mysql root password: "testphase" # Required if "mysql user" is empty, default is empty. The root superuser password
          # mysql user: 'developer' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
          # mysql password: ${{ secrets.DatabasePassword }} # Required if "mysql user" exists. The password for the "mysql user"

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Go Generate X
        run: go generate -x

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest
          skip-pkg-cache: true
          args: --timeout 3m0s --verbose
          working-directory: ./service
      #     # Optional: working directory, useful for monorepos
      #     # working-directory: somedir

      #     # Optional: golangci-lint command line arguments.
      #     # args: --issues-exit-code=0

      #     # Optional: show only new issues if it's a pull request. The default value is `false`.
      #     # only-new-issues: true

      #     # Optional: if set to true then the action will use pre-installed Go.
      #     # skip-go-installation: true

      #     # Optional: if set to true then the action don't cache or restore ~/go/pkg.
      #     # skip-pkg-cache: true

      #     # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
      #     # skip-build-cache: true


      - name: Init DB
        run: go run main.go initMigrateMysql --config configs/config.ci.yaml

      - name: Start service
        run: go run main.go serve --config configs/config.ci.yaml &


      - name: Navigator Service API Test
        uses: matt-ball/newman-action@v1.0.4
        with:
          collection: "service/.postman/Navigator Service API Test.postman_collection.json"
          envVar: '[{ "key": "base_url", "value": "http://localhost:9000" }]'
